version: 2
jobs:
  # Build binary
  build:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/redsift/dnstrace
    steps:
      - checkout
      - run:
          name: Build binary
          command: |
            go get github.com/Masterminds/glide
            glide install
            mkdir -p .bin
            CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo --ldflags "-X main.Tag=$CIRCLE_TAG -X main.Commit=$CIRCLE_SHA1" -o .bin/dnstrace dnstrace.go
      - persist_to_workspace:
          root: .bin
          paths:
            - dnstrace

  # Test binary
  test_help:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: .bin/dnstrace
      - run: .bin/dnstrace --help

  test_google:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: .bin/dnstrace
      - run: .bin/dnstrace -s 8.8.8.8 -r redsift.io

  # Pop binary into minimal container and push
  deploy:
    docker:
      - image: circleci/golang:1.8
        environment:
          CONTAINER_NAME: redsift/dnstrace

    steps:
      - attach_workspace:
          at: .bin/dnstrace
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
             docker build -t $CONTAINER_NAME -f Dockerfile.scratch .
             docker tag -f $CONTAINER_NAME:latest $CONTAINER_NAME:$CIRCLE_TAG-$CIRCLE_BUILD_NUM
             docker login -u $DOCKER_USER -p $DOCKER_PASS
             docker push $CONTAINER_NAME

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test_help:
          requires:
            - build
      - test_google:
          requires:
            - build
      - deploy:
          requires:
            - test_help
            - test_google
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/